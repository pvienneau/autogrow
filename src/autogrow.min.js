/*
  Autogrow 1.1.0
  license: MIT
  https://github.com/pvienneau/autogrow
*/
Autogrow=function(e,t){var r=this;t=t||{};var n={minRows:1,maxRows:!1},o=function(){for(var e=1;e<arguments.length;e++)for(var t in arguments[e])arguments[e].hasOwnProperty(t)&&(arguments[0][t]=arguments[e][t]);return arguments[0]},i=function(e){return e?("undefined"!=typeof e.minRows&&(e.minRows=Math.max(1,e.minRows)),e):{}};return"undefined"==typeof e||"textarea"!==e.tagName.toLowerCase()?console.warn("You must define a textarea to deploy the autogrow onto."):(r.elements={textarea:e},r.options=o(n,i(t)),r.update(!0),r)},Autogrow.prototype.update=function(e){var t=this;return"undefined"==typeof e&&(e=!1),e&&(t.createMirror(),t.registerEventListeners(),t.calculateTextareaHeight()),!0},Autogrow.prototype.createMirror=function(){var e=this,t=window.getComputedStyle(e.elements.textarea,null),r={overflow:"hidden",height:"auto",textRendering:"optimizeSpeed",display:t.display},n={visibility:"hidden",position:"absolute",zIndex:-1,width:parseInt(e.elements.textarea.offsetWidth,10)-parseInt(t.paddingLeft,10)-parseInt(t.paddingRight,10)-parseInt(t.borderLeftWidth,10)-parseInt(t.borderRightWidth,10)+"px"},o=["fontFamily","fontSize","fontWeight","fontStyle","fontVariant","fontStretch","letterSpacing","lineHeight","textTransform","wordSpacing","wordBreak","letterSpacing","textIndent","whiteSpace","wordWrap"];e.destroyMirror(),e.elements.mirror=document.createElement("div");for(property in r)e.elements.textarea.style[property]=r[property],e.elements.mirror.style[property]=r[property];for(property in n)e.elements.mirror.style[property]=n[property];return o.forEach(function(r){e.elements.mirror.style[r]=t[r],e.elements.textarea.style[r]=t[r]}),e.elements.textarea.rows=e.options.minRows,e.options.rowHeight=parseInt(e.elements.mirror.style.lineHeight,10),e.elements.mirror.style.minHeight=(e.options.minHeight||parseInt(t.minHeight,10)||parseInt(t.height,10)||parseInt(e.elements.mirror.style.lineHeight,10))+"px",document.body.appendChild(e.elements.mirror),!0},Autogrow.prototype.destroyMirror=function(){var e=this;return e.elements.mirror?(e.elements.mirror.parentNode.removeChild(e.elements.mirror),delete e.elements.mirror,!0):!1},Autogrow.prototype.registerEventListeners=function(){var e=this;return e.unregisterEventListeners(),e.elements.textarea.addEventListener("input",function(t){e.keyDownHandler(t)}),!0},Autogrow.prototype.unregisterEventListeners=function(){var e=this;return e.elements.textarea.removeEventListener("input",function(t){e.keyDownHandler(t)}),!0},Autogrow.prototype.keyDownHandler=function(){var e=this;e.calculateTextareaHeight()},Autogrow.prototype.calculateTextareaHeight=function(){var e,t=this,r=parseInt(t.elements.mirror.style.minHeight,10),n=t.elements.textarea.rows;return t.copyTextToMirror(),r=Math.max(parseInt(t.elements.mirror.clientHeight,10),parseInt(r,10)),e=Math.max(t.options.minRows,r/t.options.rowHeight),t.options.maxRows&&(e=math.min(t.options.maxRows,r)),n!=e&&(t.elements.textarea.rows=e,t.throwEvent("rowChange",t.elements.textarea)),!0},Autogrow.prototype.copyTextToMirror=function(){var e=this,t=e.elements.textarea.value;return"undefined"==typeof extraKey&&(extraKey=""),e.elements.mirror.innerHTML=t,!0},Autogrow.prototype.throwEvent=function(e,t){return"undefined"==typeof e||"undefined"==typeof t?!1:void t.dispatchEvent(new Event(e))},function(){for(var e=document.getElementsByTagName("textarea"),t=0;t<e.length;t++){var r=e[t];r.dataset.autogrow&&new Autogrow(r)}}();